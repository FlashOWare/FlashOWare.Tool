using FlashOWare.Tool.Core.Interceptors;
using FlashOWare.Tool.Core.Tests.Analyzers;
using FlashOWare.Tool.Core.Tests.Assertions;
using FlashOWare.Tool.Core.Tests.Testing;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp;

namespace FlashOWare.Tool.Core.Tests.Interceptors;

public class InterceptorLocatorTests
{
    [Fact]
    public async Task ListAsync_WithInterceptors_ReturnsInterceptors()
    {
        //Arrange
        var project = await ProjectBuilder.CSharp(LanguageVersion.CSharp11)
            .AddDocument("CallSite.cs", """
                using System;

                namespace Test;

                class Program
                {
                    static void Main(string[] args)
                    {
                        Console.WriteLine("Hello, World!"); //line 9, character 17
                        Intercepted.Foo(); //line 10, character 21
                        MyClass.Bar(".NET"); //line 11, character 17
                        MyClass.Baz("8.0"); //line 12, character 17
                        Intercepted.Foo(); MyClass.Bar(".NET"); MyClass.Baz("8.0"); //line 13, characters 21 36 57
                    }
                }
                """)
            .AddDocument("Intercepted.cs", """
                namespace Test;

                public static class Intercepted
                {
                    public static void Foo()
                    {
                    }
                }
                """)
            .AddDocument("MyClass.cs", """
                namespace Test;

                public static class MyClass
                {
                    public static void Bar(string text)
                    {
                    }
                
                    public static void Baz(string text)
                    {
                    }
                }
                """)
            .AddDocument("Interceptors.g.cs", """
                //------------------------------------------------------------------------------
                // <auto-generated>
                //     This code was generated by a tool.
                //
                //     Changes to this file may cause incorrect behavior and will be lost if
                //     the code is regenerated.
                // </auto-generated>
                //------------------------------------------------------------------------------
                #nullable enable

                namespace System.Runtime.CompilerServices
                {
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("MyTest", "1.0.0.0")]
                    [global::System.AttributeUsage(global::System.AttributeTargets.Method, AllowMultiple = true)]
                    file sealed class InterceptsLocationAttribute : global::System.Attribute
                    {
                        public InterceptsLocationAttribute(string filePath, int line, int column)
                        {
                        }
                    }
                }

                namespace MyNamespace.Generated
                {
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("MyTest", "1.0.0.0")]
                    file static class Interceptors
                    {
                        [global::System.Runtime.CompilerServices.InterceptsLocation(@"CallSite.cs", 10, 21)]
                        internal static void Interceptor0()
                        {
                        }

                        [global::System.Runtime.CompilerServices.InterceptsLocation(@"CallSite.cs", 11, 17)]
                        [global::System.Runtime.CompilerServices.InterceptsLocation(@"CallSite.cs", 12, 17)]
                        internal static void Interceptor1(string text)
                        {
                        }
                    }
                }
                """)
            .AddDocument("MoreInterceptors.g.cs", """
                //------------------------------------------------------------------------------
                // <auto-generated>
                //     This code was generated by a tool.
                //
                //     Changes to this file may cause incorrect behavior and will be lost if
                //     the code is regenerated.
                // </auto-generated>
                //------------------------------------------------------------------------------
                #nullable enable

                namespace System.Runtime.CompilerServices
                {
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("MyTest", "1.0.0.0")]
                    [global::System.AttributeUsage(global::System.AttributeTargets.Method, AllowMultiple = true)]
                    file sealed class InterceptsLocationAttribute : global::System.Attribute
                    {
                        public InterceptsLocationAttribute(string filePath, int line, int column)
                        {
                        }
                    }
                }

                namespace MyNamespace.Generated.More
                {
                    using GeneratedCodeAlias = global::System.CodeDom.Compiler.GeneratedCodeAttribute;
                    using InterceptsLocationAlias = global::System.Runtime.CompilerServices.InterceptsLocationAttribute;

                    [GeneratedCodeAlias("MyTest", "1.0.0.0")]
                    file static class Interceptors
                    {
                        const string filePath = @"CallSite.cs";
                        const int line = 9;
                        const int character = 17;

                        [InterceptsLocationAlias(filePath, line + 1 - 1, character - 1 + 1)]
                        internal static void Interceptor(string? value)
                        {
                        }
                    }
                }
                """)
            .AddDocument("PartialDefinitions.g.cs", """
                //------------------------------------------------------------------------------
                // <auto-generated>
                //     This code was generated by a tool.
                //
                //     Changes to this file may cause incorrect behavior and will be lost if
                //     the code is regenerated.
                // </auto-generated>
                //------------------------------------------------------------------------------
                #nullable enable

                namespace System.Runtime.CompilerServices
                {
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("MyTest", "1.0.0.0")]
                    [global::System.AttributeUsage(global::System.AttributeTargets.Method, AllowMultiple = true)]
                    file sealed class InterceptsLocationAttribute : global::System.Attribute
                    {
                        public InterceptsLocationAttribute(string filePath, int line, int column)
                        {
                        }
                    }
                }

                namespace MyNamespace.Generated.Partial
                {
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("MyTest", "1.0.0.0")]
                    internal static partial class Interceptors
                    {
                        [global::System.Runtime.CompilerServices.InterceptsLocation(@"CallSite.cs", 13, 21)]
                        internal static partial void Interceptor0();

                        internal static partial void Interceptor1(string text);
                    }
                }

                namespace MyNamespace.Generated.Partial
                {
                    internal static partial class Interceptors
                    {
                        internal static partial void Interceptor0()
                        {
                        }
                    }
                }
                """)
            .AddDocument("PartialImplementations.g.cs", """
                //------------------------------------------------------------------------------
                // <auto-generated>
                //     This code was generated by a tool.
                //
                //     Changes to this file may cause incorrect behavior and will be lost if
                //     the code is regenerated.
                // </auto-generated>
                //------------------------------------------------------------------------------
                #nullable enable

                namespace System.Runtime.CompilerServices
                {
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("MyTest", "1.0.0.0")]
                    [global::System.AttributeUsage(global::System.AttributeTargets.Method, AllowMultiple = true)]
                    file sealed class InterceptsLocationAttribute : global::System.Attribute
                    {
                        public InterceptsLocationAttribute(string filePath, int line, int column)
                        {
                        }
                    }
                }

                namespace MyNamespace.Generated.Partial
                {
                    internal static partial class Interceptors
                    {
                        [global::System.Runtime.CompilerServices.InterceptsLocation(@"CallSite.cs", 13, 36)]
                        [global::System.Runtime.CompilerServices.InterceptsLocation(@"CallSite.cs", 13, 57)]
                        internal static partial void Interceptor1(string text)
                        {
                        }
                    }
                }
                """)
            .WithFeature("InterceptorsPreviewNamespaces", "MyNamespace.Generated;MyNamespace.Generated.More;MyNamespace.Generated.Partial")
            .BuildCheckedAsync();
        //Act
        InterceptorList result = await InterceptorLocator.ListAsync(project);
        //Assert
        ToolAssert.Equal(result,
            new InterceptorInfo("Interceptors.g.cs", 29, 30, "MyNamespace.Generated.Interceptors.Interceptor0()", new InterceptionInfo("CallSite.cs", 10, 21, "Test.Intercepted.Foo()")),
            new InterceptorInfo("Interceptors.g.cs", 35, 30, "MyNamespace.Generated.Interceptors.Interceptor1(string)", new InterceptionInfo("CallSite.cs", 11, 17, "Test.MyClass.Bar(string)"), new InterceptionInfo("CallSite.cs", 12, 17, "Test.MyClass.Baz(string)")),
            new InterceptorInfo("MoreInterceptors.g.cs", 36, 30, "MyNamespace.Generated.More.Interceptors.Interceptor(string?)", new InterceptionInfo("CallSite.cs", 9, 17, "System.Console.WriteLine(string?)")),
            new InterceptorInfo("PartialDefinitions.g.cs", 29, 38, "MyNamespace.Generated.Partial.Interceptors.Interceptor0()", new InterceptionInfo("CallSite.cs", 13, 21, "Test.Intercepted.Foo()")),
            new InterceptorInfo("PartialImplementations.g.cs", 29, 38, "MyNamespace.Generated.Partial.Interceptors.Interceptor1(string)", new InterceptionInfo("CallSite.cs", 13, 36, "Test.MyClass.Bar(string)"), new InterceptionInfo("CallSite.cs", 13, 57, "Test.MyClass.Baz(string)"))
        );
    }

    [Fact]
    public async Task ListAsync_WithoutInterceptors_ReturnsEmpty()
    {
        //Arrange
        var project = await ProjectBuilder.CSharp(LanguageVersion.CSharp11)
            .AddDocument("CallSite.cs", """
                using System;

                namespace Test;

                class Program
                {
                    static void Main(string[] args)
                    {
                        Console.WriteLine("Hello, World!");
                    }
                }
                """)
            .AddDocument("BadNamespace.g.cs", """
                //------------------------------------------------------------------------------
                // <auto-generated>
                //     This code was generated by a tool.
                //
                //     Changes to this file may cause incorrect behavior and will be lost if
                //     the code is regenerated.
                // </auto-generated>
                //------------------------------------------------------------------------------
                #nullable enable

                namespace System.Runtime.CompilerService
                {
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("MyTest", "1.0.0.0")]
                    [global::System.AttributeUsage(global::System.AttributeTargets.Method, AllowMultiple = true)]
                    file sealed class InterceptsLocationAttribute : global::System.Attribute
                    {
                        public InterceptsLocationAttribute(string filePath, int line, int column)
                        {
                        }
                    }
                }

                namespace MyNamespace.Generated
                {
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("MyTest", "1.0.0.0")]
                    file static class Interceptors
                    {
                        [global::System.Runtime.CompilerService.InterceptsLocation(@"CallSite.cs", 9, 17)]
                        internal static void Interceptor(string? value)
                        {
                        }
                    }
                }
                """)
            .AddDocument("BadAttributeName.g.cs", """
                //------------------------------------------------------------------------------
                // <auto-generated>
                //     This code was generated by a tool.
                //
                //     Changes to this file may cause incorrect behavior and will be lost if
                //     the code is regenerated.
                // </auto-generated>
                //------------------------------------------------------------------------------
                #nullable enable

                namespace System.Runtime.CompilerServices
                {
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("MyTest", "1.0.0.0")]
                    [global::System.AttributeUsage(global::System.AttributeTargets.Method, AllowMultiple = true)]
                    file sealed class InterceptsLocation : global::System.Attribute
                    {
                        public InterceptsLocation(string filePath, int line, int column)
                        {
                        }
                    }
                }

                namespace MyNamespace.Generated
                {
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("MyTest", "1.0.0.0")]
                    file static class Interceptors
                    {
                        [global::System.Runtime.CompilerServices.InterceptsLocation(@"CallSite.cs", 9, 17)]
                        internal static void Interceptor(string? value)
                        {
                        }
                    }
                }
                """)
            .BuildCheckedAsync();
        //Act
        InterceptorList result = await InterceptorLocator.ListAsync(project);
        //Assert
        ToolAssert.Equal(result);
    }

    [Fact]
    public async Task ListAsync_WithGenerator_ReturnsInterceptors()
    {
        //Arrange
        var project = await ProjectBuilder.CSharp(OutputKind.ConsoleApplication, LanguageVersion.CSharp12)
            .AddDocument("CallSite.cs", """
                using Test;

                Invoker.Invoke();
                """)
            .AddDocument("Intercepted.cs", """
                using AutoGenerated;

                namespace Test;

                internal static class Invoker
                {
                    [Interceptable]
                    public static void Invoke()
                    {
                    }
                }
                """)
            .AddGenerator<InterceptorGenerator>()
            .WithFeature("InterceptorsPreviewNamespaces", ";AutoGenerated")
            .BuildCheckedAsync();
        //Act
        InterceptorList result = await InterceptorLocator.ListAsync(project);
        //Assert
        ToolAssert.Equal(result,
            new InterceptorInfo(@"FlashOWare.Tool.Core.Tests\FlashOWare.Tool.Core.Tests.Analyzers.InterceptorGenerator\Test.Invoker.Invoke.g.cs", 10, 30, "AutoGenerated.Interceptors.Interceptor()", new InterceptionInfo("CallSite.cs", 3, 9, "Test.Invoker.Invoke()"))
        );
    }

    [Fact]
    public async Task ListAsync_HasErrors_Throws()
    {
        //Arrange
        var project = ProjectBuilder.CSharp(LanguageVersion.CSharp11)
            .AddDocument("Program.cs", "Hello, World!")
            .BuildUnchecked();
        //Act
        var result = () => InterceptorLocator.ListAsync(project);
        //Assert
        await Assert.ThrowsAsync<InvalidOperationException>(result);
    }

    [Fact]
    public async Task ListAsync_Cancellation_Throws()
    {
        //Arrange
        var project = await ProjectBuilder.CSharp(LanguageVersion.CSharp11)
            .AddDocument("Program.cs", "using System;")
            .BuildCheckedAsync();
        CancellationToken cancellationToken = new(true);
        //Act
        var result = () => InterceptorLocator.ListAsync(project, cancellationToken);
        //Assert
        await Assert.ThrowsAsync<OperationCanceledException>(result);
    }

    [Fact]
    public async Task ListAsync_VisualBasic_Throws()
    {
        //Arrange
        var project = await ProjectBuilder.VisualBasic()
            .AddDocument("Program.vb", """
                Imports System

                Module Program
                    Sub Main(args As String())
                        Console.WriteLine("Hello World!")
                    End Sub
                End Module
                """)
            .BuildCheckedAsync();
        //Act
        var result = () => InterceptorLocator.ListAsync(project);
        //Assert
        await Assert.ThrowsAsync<InvalidOperationException>(result);
    }
}
